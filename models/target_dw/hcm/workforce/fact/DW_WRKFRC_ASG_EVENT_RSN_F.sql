 SELECT     ASG.ASSIGNMENT_ID AS ASSIGNMENT_ID                      , 
     ASG.EFFECTIVE_START_DATE AS EVENT_DATE                         , 
     ASG.EFFECTIVE_SEQUENCE AS EVENT_SEQUENCE                    , 
     ASG.EFFECTIVE_LATEST_CHANGE AS DAY_FINAL_CHANGE_FLAG              , 
     CAST(ASG.ASSIGNMENT_ID AS STRING) ||'~'|| FORMAT_DATE('%Y%m%d',PARSE_DATE('%Y-%m-%d',ASG.EFFECTIVE_START_DATE))||'~'||ASG.EFFECTIVE_SEQUENCE||'~'||ASG.EFFECTIVE_LATEST_CHANGE AS SOURCE_RECORD_ID                   , 
     ASG.EFFECTIVE_END_DATE AS NEXT_EVENT_DATE                    , 
     ASG.ACTION_OCCURRENCE_ID AS ACTION_OCCURRENCE_ID            , 
     ASG.ACTION_ID AS ACTION_ID                        , 
     ASG.ACTION_REASON_ID AS ACTION_REASON_ID                , 
     ACTN.ACTION_TYPE_ID AS ACTION_TYPE_ID                    , 
     ACTN.ACTION_TYPE_CODE AS ACTION_TYPE_CODE                , 
     ASG.JOB_ID AS JOB_ID                            , 
     ASG.DEPARTMENT_ID AS DEPARTMENT_ID                      , 
     ASG.PERSON_ID AS PERSON_ID                          , 
     ASG.PERSON_TYPE_ID AS PERSON_TYPE_ID                     , 
     ASG.LOCATION_ID AS LOCATION_ID                        , 
     ASG.POSITION_ID AS POSITION_ID                        , 
     ASG.GRADE_ID AS GRADE_ID                        , 
     COALESCE(SUP.MANAGER_ID,-99999) AS SUPERVISOR_ID                    , 
     COALESCE(SUP.MANAGER_ASSIGNMENT_ID,-99999) AS SUPERVISOR_ASSIGNMENT_ID        , 
     ASG.LEGAL_EMPLOYER_ID AS LEGAL_EMPLOYER_ID                , 
     ASG.BUSINESS_UNIT_ID AS BUSINESS_UNIT_ID                , 
     ASG.PERIOD_OF_SERVICE_ID AS PERIOD_OF_SERVICE_ID            , 
     ASG.REPORTING_ESTABLISHMENT_ID AS REPORTING_ESTABLISHMENT_ID        , 
     ASG.SYSTEM_PERSON_TYPE AS SYSTEM_PERSON_TYPE                , 
     ASG.WORKER_TYPE AS WORKER_TYPE                        , 
     ASG.WORKER_CATEGORY AS WORKER_CATEGORY                    , 
     ASG.LEGISLATION_CODE AS LEGISLATION_CODE                , 
     ASG.ASSIGNMENT_CATEGORY AS ASSIGNMENT_CATEGORY                , 
     ASG.PRIMARY_FLAG AS PRIMARY_FLAG                    , 
     ASG.PRIMARY_ASSIGNMENT_FLAG AS PRIMARY_ASSIGNMENT_FLAG            , 
     ASG.ASSIGNMENT_STATUS_TYPE_ID AS ASSIGNMENT_STATUS_TYPE_ID        , 
     COALESCE(ASG.FULL_PART_TIME_FLAG,'~NOVALUE~') AS FULL_PART_TIME_FLAG                , 
     ASG.ASSIGNMENT_NUMBER AS ASSIGNMENT_NUMBER                , 
     ASG.ASSIGNMENT_NAME AS ASSIGNMENT_NAME                    , 
     ASG.PER_SYSTEM_STATUS AS PER_SYSTEM_STATUS                , 
     ASG.PAY_SYSTEM_STATUS AS PAY_SYSTEM_STATUS                , 
     HDC.HEADCOUNT AS HEADCOUNT                        , 
     FTE.FTE AS FTE                                , 
     0 AS JOB_CHANGE_IND                    , 
     0 AS GRADE_CHANGE_IND                , 
     0 AS LOCATION_CHANGE_IND                , 
     0 AS POSITION_CHANGE_IND                , 
     0 AS DEPARTMENT_CHANGE_IND            , 
     0 AS BUSINESS_UNIT_CHANGE_IND        , 
     0 AS FULL_PART_TIME_CHANGE_IND        , 
     CASE WHEN (ASG.ACTION_OCCURRENCE_ID = HDC.ACTION_OCCURRENCE_ID) AND HDC.HEADCOUNT_CHANGE_IND = 1 THEN 1 ELSE 0 END AS HEADCOUNT_CHANGE_IND            , 
     CASE WHEN (ASG.ACTION_OCCURRENCE_ID = FTE.ACTION_OCCURRENCE_ID)AND FTE.FTE_CHANGE_IND = 1 THEN 1 ELSE 0 END AS FTE_CHANGE_IND                    , 
     CASE WHEN (ASG.ACTION_OCCURRENCE_ID = SUP.ACTION_OCCURRENCE_ID) AND SUP.MANAGER_CHANGE_IND = 1 THEN 1 ELSE 0 END AS MANAGER_CHANGE_IND                 , 
     CASE WHEN ACTN.ACTION_TYPE_CODE IN ('EMPL_WR_EMP','EMPL_ADD_EMP','EMPL_REHIRE','EMPL_ADD_CWK','EMPL_WR_CWK','EMPL_ADD_NWK','EMPL_ADD_PWK', 'EMPL_WR_NWK', 'ORA_EMPL_WR_PWK') THEN 1 ELSE 0 END AS HIRE_EVENT_IND                     , 
     CASE WHEN ACTN.ACTION_TYPE_CODE IN ('EMPL_REHIRE','EMPL_RENEW_CWK') THEN 1 ELSE 0 END AS REHIRE_EVENT_IND                 , 
     CASE WHEN ACTN.ACTION_TYPE_CODE IN ('EMPL_TERMINATE') THEN 1 ELSE 0 END AS TERM_EVENT_IND                    , 
     CASE WHEN ACTN.REORGANIZATION_FLAG = 'Y' THEN 1 ELSE 0 END AS REORG_EVENT_IND                    , 
     CASE WHEN ACTN.ACTION_TYPE_CODE IN ('EMPL_GLB_TRANSFER') AND ASG.PER_SYSTEM_STATUS = 'ACTIVE' THEN 1 ELSE 0 END AS GLB_TRANSFER_IN_IND                , 
     CASE WHEN ACTN.ACTION_TYPE_CODE IN ('EMPL_GLB_TRANSFER') AND ASG.PER_SYSTEM_STATUS = 'INACTIVE' THEN 1 ELSE 0 END AS GLB_TRANSFER_OUT_IND              , 
     CASE WHEN ACTN.ACTION_TYPE_CODE IN ('EMPL_GLB_TEMP_ASG') THEN 1 ELSE 0 END AS GLB_TEMP_TRANSFER_IN_IND        , 
     CASE WHEN ACTN.ACTION_TYPE_CODE IN ('EMPL_END_GLB_TEMP_ASG') THEN 1 ELSE 0 END AS GLB_TEMP_TRANSFER_OUT_IND       , 
     CASE WHEN ACTN.ACTION_TYPE_CODE IN ('EMPL_TRANSFER') THEN 1 ELSE 0 END AS TRANSFER_EVENT_IND                , 
     CASE WHEN ACTN.ACTION_TYPE_CODE IN ('EMPL_PROMOTION') THEN 1 ELSE 0 END AS PROMOTION_EVENT_IND                , 
     -99999 AS PRV_EVT_JOB_ID                   , 
     -99999 AS PRV_EVT_GRADE_ID                 , 
     -99999 AS PRV_EVENT_LOCATION_ID              , 
     -99999 AS PRV_EVENT_POSITION_ID              , 
     -99999 AS PRV_EVENT_DEPARTMENT_ID            , 
     HDC.PREVIOUS_HEADCOUNT AS PRV_HEADCOUNT                   , 
     FTE.PREVIOUS_FTE AS PRV_FTE                          , 
     SUP.PREVIOUS_MANAGER_ID AS PRV_SUPERVISOR_ID                 , 
     SUP.PREVIOUS_MANAGER_ASSIGNMENT_ID AS PRV_SUPERVISOR_ASSIGNMENT_ID    , 
     -99999 AS PRV_EVT_LEGAL_EMPLOYER_ID        , 
     -99999 AS PRV_EVT_BUSINESS_UNIT_ID          , 
     -99999 AS PRV_EVT_RPT_ESTABLISHMENT_ID    , 
     -99999 AS PRV_EVT_PERSON_TYPE_ID            , 
     '~NOVALUE~' AS PRV_EVT_SYSTEM_PERSON_TYPE        , 
     '~NOVALUE~' AS PRV_EVT_WORKER_TYPE                , 
     '~NOVALUE~' AS PRV_EVT_LEGISLATION_CODE        , 
     '~NOVALUE~' AS PRV_EVT_ASSIGNMENT_CATEGORY        , 
     -99999 AS PRV_EVT_ASG_STATUS_TYPE_ID        , 
     '~NOVALUE~' AS PRV_EVT_PAY_SYSTEM_STATUS        , 
     '~NOVALUE~' AS PRV_EVT_PER_SYSTEM_STATUS        , 
     '~NOVALUE~' AS PRV_EVT_WORKER_CATEGORY            , 
     '~NOVALUE~' AS PRV_EVT_FULL_PART_TIME_FLAG        , 
     '~NOVALUE~' AS PRV_EVT_PRIMARY_FLAG            , 
     '~NOVALUE~' AS PRV_EVT_PRIMARY_ASSG_FLAG        , 
     CASE WHEN ASG.ACTION_OCCURRENCE_ID = HDC.ACTION_OCCURRENCE_ID AND HDC.HEADCOUNT_CHANGE_IND = 1 AND HDC.HEADCOUNT > HDC.PREVIOUS_HEADCOUNT THEN 1 ELSE 0 END AS HEADCOUNT_INCR_IND                , 
     CASE WHEN ASG.ACTION_OCCURRENCE_ID = HDC.ACTION_OCCURRENCE_ID AND HDC.HEADCOUNT_CHANGE_IND = 1 AND HDC.HEADCOUNT < HDC.PREVIOUS_HEADCOUNT THEN 1 ELSE 0 END AS HEADCOUNT_DECR_IND                , 
     CASE WHEN ASG.ACTION_OCCURRENCE_ID = FTE.ACTION_OCCURRENCE_ID AND FTE.FTE_CHANGE_IND = 1 AND FTE.FTE > FTE.PREVIOUS_FTE THEN 1 ELSE 0 END AS FTE_INCR_IND                    , 
     CASE WHEN ASG.ACTION_OCCURRENCE_ID = FTE.ACTION_OCCURRENCE_ID AND FTE.FTE_CHANGE_IND = 1 AND FTE.FTE < FTE.PREVIOUS_FTE THEN 1 ELSE 0 END AS FTE_DECR_IND                    , 
  CASE WHEN PARSE_DATE('%Y-%m-%d',ASG.EFFECTIVE_START_DATE) = SPAN.EFFECTIVE_START_DATE AND ACTN.ACTION_TYPE_CODE IN ('EMPL_ADD_ASG','EMPL_ADD_TERMS','ORA_EMPL_REV_TERMINATION','EMPL_GLB_TEMP_ASG') THEN 1 ELSE 0 END AS ASG_START_OTHERS_IND    , 
  CASE WHEN (PARSE_DATE('%Y-%m-%d',ASG.EFFECTIVE_START_DATE) = SPAN.EFFECTIVE_END_DATE + 1) AND ACTN.ACTION_TYPE_CODE IN ('EMPL_END_ASG','EMPL_END_PROBATION','EMPL_END_TEMP_ASG','EMPL_END_TERMS','ORA_EMPL_CANCEL_WR') AND ASG.PER_SYSTEM_STATUS = 'INACTIVE' THEN 1 ELSE 0 END AS ASG_END_OTHERS_IND      
 FROM  {{ ref('DW_WRKFRC_ASG_F') }} ASG 
      LEFT OUTER JOIN {{ ref('DW_WRKFRC_ASG_HDC_CHANGE_STAGE') }} HDC  ON ( ASG.ASSIGNMENT_ID = HDC.ASSIGNMENT_ID AND PARSE_DATE('%Y-%m-%d',ASG.EFFECTIVE_START_DATE) BETWEEN HDC.EFFECTIVE_START_DATE AND HDC.EFFECTIVE_END_DATE ) 
      LEFT OUTER JOIN  {{ ref('DW_WRKFRC_ASG_FTE_CHANGE_STAGE') }} FTE  ON ( ASG.ASSIGNMENT_ID = FTE.ASSIGNMENT_ID AND PARSE_DATE('%Y-%m-%d',ASG.EFFECTIVE_START_DATE) BETWEEN FTE.EFFECTIVE_START_DATE AND FTE.EFFECTIVE_END_DATE ) 
      LEFT OUTER JOIN  {{ ref('DW_WRKFRC_ASG_SUP_CHANGE_STAGE') }} SUP  ON ( ASG.ASSIGNMENT_ID = SUP.ASSIGNMENT_ID AND PARSE_DATE('%Y-%m-%d',ASG.EFFECTIVE_START_DATE) BETWEEN SUP.EFFECTIVE_START_DATE AND SUP.EFFECTIVE_END_DATE ) 
      LEFT OUTER JOIN  {{ ref('DW_ACTION_D') }} ACTN  ON ( ASG.ACTION_ID = ACTN.ACTION_ID ) 
      LEFT OUTER JOIN  {{ ref('DW_WRKFRC_ASG_SPAN_DT_STAGE') }} SPAN  ON ( ASG.ASSIGNMENT_ID = SPAN.ASSIGNMENT_ID )

